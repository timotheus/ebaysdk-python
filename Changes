Changes for ebaysdk

2.2.0 Mon Apr 20 15:23:53 PDT 2020
- Forced HTTPS for finding, shopping, and trading calls
- fixed sample code so that it uses the appropriate domain
- added py38 to tox testing

2.1.6
- Update Copyright

2.1.5 Oct 13, 2017
- Bug fix release

2.1.4 Tue Aug 23 11:21:37 PDT 2016
- Merge PR from listingmirror for site-id fix
- Added a few performance tests

2.1.3
- Merged PR for XML escaping option (https://github.com/timotheus/ebaysdk-python/pull/139)
- fix unicode issue between py2 and py3
- add a unicode example in the samples dir
- fix for issue #127 (false-ish check)
- merge in py3 datatype fix from MartiONE

2.1.2 Thu Jun 25 14:54:12 PDT 2015 
- merge in rowbare PR that support file upload
- refactor order poller into a Class and implement a base Storage class
  for any domain-specific actions (e.g. inserting into a DB)
- merged in backend support for inventory management (from bimusiek)
- add backend for Business Policy API (from nickspring)
- set ssl verify to True in connection class

2.1.1 Tue Apr 14 20:16:47 PDT 2015
- merge in a pull request to fix Unicode issues
- remove PyYAML dependency
- add poller package for pulling orders

2.1.0 Mon Jul  7 10:03:36 PDT 2014
- modify install instructions
- remove grequests install dep from setup.py

2.0.0
- WARNING!! This release breaks some backward compatibility
  Read https://github.com/timotheus/ebaysdk-python/wiki/Migrating-from-v1-to-v2
- imports: Modified package structure
- execute(): Modified return value
- Switched to lxml.etree
- Added a new response class
  response.reply, response.dom(), response.dict(), response.json()
- Added ebaysdk exception classes
- Modified utils.py (dict2xml, xml2dict)

1.0.3
- rework Unicode fix
- fix logging handler

1.0.2 Sat Feb  8 20:44:00 PST 2014
- fix unicode issue is dict to xml routine
- add a Unicode test
- fix http backend

1.0.0
- Major refactor
  + changes are backward compatible unless you're subclassing any of the
    SDK classes
  + moved from PyCurl to Python Requests
  + code organization
  + standard python logging
  + add exceptions

0.1.11
- Add affiliate headers to the Shopping API backend
- https://github.com/timotheus/ebaysdk-python/issues/40
  fix datatype issue with error codes from the shopping API
  
- added py3 support thanks to Nikolay Derkach
- store response error codes in an array when processing response.
  The response error codes are accessible by the api.response_codes()
  accessor.

  if api.error():
      if 37 in api.response_codes():
          print "Invalid data"

0.1.10
- added error checking for html() class
- all class return response_data regardless of the HTTP status code
- added Merchandising API class
- update SOA class default value
- add more trading API samples

0.1.9 Wed Apr 24 14:38:40 PDT 2013
- update error handling
- add VerifyAddItem sample call
- update license in setup.py

0.1.8 Tue Apr 23 15:33:02 PDT 2013
- push dist to pypi
- fix deprecation warning in utils.py
- pep8 cleanup
- handle utf-8 when parsing with BeautifulStoneSoup
- add retry to standard & parallel calls
- a bug fix for SOA class
- add documentation and sample scripts
- clean up YAML file
- YAML values are now overridden by values defined
  when building the object
- remove silent dependency on simplejson, at least for Python >= 2.6
- fix bug in html class that allows for POST 
- refactor and style cleanup
- added parallel support using the parallel class
- created new prepare, process, and _process_http_request methods

0.1.7
- update tests
- modify response_obj() to return response_dict()

0.0.6
- support older version of Element tree
- modify dict2xml to handle nodes with array content

for example,
{ 
    'keywords': 'shoes', 
    'paginationInput': { 'pageNumber': 1 }, 
    'itemFilter': [ 
        { 'name': 'MinBids', 'value': 10 }, 
        { 'name': 'MaxBids', 'value': 14 }
    ],
}
<?xml version='1.0' encoding='utf-8'?>
<findItemsAdvancedRequest xmlns="http://www.ebay.com/marketplace/search/v1/services">
<itemFilter><name>MinBids</name><value>10</value></itemFilter>
<itemFilter><name>MaxBids</name><value>14</value></itemFilter>
<keywords>shoes</keywords>
<paginationInput><pageNumber>1</pageNumber></paginationInput>
</findItemsAdvancedRequest>

0.0.5
- added response_obj() which turns a dict into a Struct
  e.g. { a : { 'name' : 'tim' } } can be accessed like a.name
- add support to dict args in the execute call. execute will now check the 
  datatype and convert to XML if necessary
- clean doctests
    
0.0.4
- moved from httplib to pycurl
  * pycurl was chosen because of its https/proxy support and
    that it's thread-safe.

0.0.3 Wed May 11 11:03:58 PDT 2011
- fix escape username/password
- fix error handling
- cleanup doctests

0.0.2 Fri Aug 20 17:25:25 PDT 2010
- fix download link 

0.0.1 Initial Release

